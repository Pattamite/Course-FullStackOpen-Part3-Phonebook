{"version":3,"sources":["components/Input.js","components/Notification.js","components/PersonDisplay.js","services/PhonebookDb.js","App.js","index.js"],"names":["Input","text","value","onChange","Notification","message","notificationClass","className","PersonDisplay","person","deleteCallBackFunction","name","number","onClick","baseUrl","PhonebookDb","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","setNotificationClass","notificationErrorClass","notificationConfirmClass","setNotification","messageClass","timeout","setTimeout","removeNameById","find","window","confirm","returnedMessage","filter","console","log","catch","error","useEffect","initialPersons","filterPersons","toUpperCase","startsWith","event","target","onSubmit","preventDefault","newPersonRecord","returnedPerson","map","editNumberOfPerson","concat","addNewName","type","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b122ae3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Input({ text, value, onChange }) {\r\n  return (\r\n    <div>\r\n      {text}\r\n      <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nfunction Notification({message, notificationClass}) {\r\n  if(message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={notificationClass}>\r\n      {message}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nfunction PersonDisplay({person, deleteCallBackFunction}) {\r\n  return (\r\n    <>\r\n    <p key={person.name}>\r\n      {person.name} {person.number}\r\n    </p>\r\n    <button onClick={deleteCallBackFunction}>remove</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PersonDisplay","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nfunction getAll() {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => {return response.data;});\r\n}\r\n\r\nfunction create(newObject) {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => {return response.data;});\r\n}\r\n\r\nfunction update(id, newObject) {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => {return response.data;});\r\n}\r\n\r\nfunction remove(id){\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => {return response;});\r\n}\r\n\r\nconst PhonebookDb = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n\r\nexport default PhonebookDb;","import React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\"\nimport Notification from \"./components/Notification\"\nimport PersonDisplay from \"./components/PersonDisplay\"\nimport PhonebookDb from \"./services/PhonebookDb\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationClass, setNotificationClass] = useState('');\n\n  const notificationErrorClass = \"error\";\n  const notificationConfirmClass = \"confirm\";\n\n  useEffect(() => {\n    console.log('Start fetching data from database.');\n    PhonebookDb\n      .getAll()\n      .then( (initialPersons) => {\n        console.log('Data received.');\n        setPersons(initialPersons);\n      });\n  }, []);\n\n  function setNotification(message, messageClass = notificationConfirmClass, timeout = 5000) {\n    setNotificationMessage(message);\n    setNotificationClass(messageClass);\n\n    if(timeout > 0) {\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, timeout);\n    }\n  }\n\n  function newNameInputOnChangeHanlder(event) {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  function newNumberInputOnChangeHanlder(event) {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  }\n\n  function nameFilterInputOnChangeHanlder(event) {\n    console.log(event.target.value);\n    setNameFilter(event.target.value);\n  }\n\n  function addNewNameHandler(event) {\n    event.preventDefault();\n\n    const person = persons.find((person) => {return person.name === newName;});\n    if (person) {\n      const result = window.confirm(`${person.name} is already added to the phonebook, update the number?`);\n      if(result) {\n        editNumberOfPerson(person);\n      }\n      return;\n    }\n\n    addNewName();\n  }\n\n  function addNewName() {\n    const newPersonRecord = {\n      name: newName,\n      number: newNumber,\n    };\n\n    PhonebookDb\n      .create(newPersonRecord)\n      .then( (returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        console.log('Add new entry successful.');\n        setNotification('Add new entry successful.', notificationConfirmClass);\n      })\n      .catch( (error) => {\n        console.log('Failed to add new entry.', error);\n        setNotification('Failed to add new entry.', notificationErrorClass);\n      });\n  }\n\n  function editNumberOfPerson(person) {\n    const newPersonRecord = {\n      ...person,\n      number: newNumber,\n    };\n\n    PhonebookDb\n      .update(newPersonRecord.id, newPersonRecord)\n      .then( (returnedPerson) => {\n        console.log('Update entry successful.');\n        setPersons(persons.map((person) => {\n          console.log('Update entry successful.');\n          setNotification('Update entry successful.', notificationConfirmClass);\n          return person.id === returnedPerson.id\n          ? returnedPerson\n          : person;\n        }));\n      })\n      .catch( (error) => {\n        console.log('Failed to update entry.', error);\n        setNotification('Failed to update entry.', notificationErrorClass);\n      });\n  }\n\n  function removeNameById(id) {\n    const person = persons.find((person) => {return person.id === id} );\n\n    const result = window.confirm(`Delete ${person.name}?`);\n\n    if(!result){\n      return;\n    }\n\n    PhonebookDb\n      .remove(id)\n      .then( (returnedMessage) => {\n        setPersons(persons.filter((person) => {return person.id !== id}));\n        console.log('Remove entry successful.');\n        setNotification('Remove entry successful.', notificationConfirmClass);\n      })\n      .catch( (error) => {\n        console.log('Failed to remove entry.', error);\n        setNotification('Failed to remove entry.', notificationErrorClass);\n      });\n  }\n\n  const filterPersons = persons.filter((person) => {\n    return person.name.toUpperCase().startsWith(nameFilter.toUpperCase());\n  });\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n        message={notificationMessage}\n        notificationClass={notificationClass}\n      />\n      <Input\n        text=\"filter:\"\n        value={nameFilter}\n        onChange={nameFilterInputOnChangeHanlder}\n      />\n      <h2>Add new Entry</h2>\n      <form onSubmit={addNewNameHandler}>\n        <Input\n          text=\"name:\"\n          value={newName}\n          onChange={newNameInputOnChangeHanlder}\n        />\n        <Input\n          text=\"number:\"\n          value={newNumber}\n          onChange={newNumberInputOnChangeHanlder}\n        />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {filterPersons.map((person) => {\n        return <PersonDisplay \n          key={person.name} \n          person={person} \n          deleteCallBackFunction={removeNameById.bind(null, person.id)}\n          />;\n      })}\n    </div>\n  );\n}\n\n\n\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}